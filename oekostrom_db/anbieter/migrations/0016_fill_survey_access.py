# Generated by Django 5.1.2 on 2024-10-26 11:53
import logging

from django.db import migrations

import anbieter.field_helper

TEST_ANBIETER = (
    ("Florian", "florian.kubitz@robinwood.de"),
    ("Knut", "knut.hildebrandt@robinwood.de"),
    ("Carli", "kound@posteo.de"),
)

logger = logging.getLogger(__name__)


def create_test_anbieter(apps, schema_editor):  # noqa: ARG001
    Anbieter = apps.get_model("anbieter", "Anbieter")
    for name, mail in TEST_ANBIETER:
        Anbieter.objects.create(
            name=f"{name} Ökopower [TEST]",
            mail=mail,
            homepage="https://robinwood.de",
            money_for_ee_only=True,
            nur_oeko=True,
            slug_id=f"test_{name.lower()}",
            note="Testeintrag für Mailversand",
        )


def reset_survey_access_entries(apps, schema_editor):  # noqa: ARG001
    Anbieter = apps.get_model("anbieter", "Anbieter")
    CompanySurvey2024 = apps.get_model("anbieter", "CompanySurvey2024")
    SurveyAccess = apps.get_model("anbieter", "SurveyAccess")

    # Delete all existing CompanySurvey2024 entries
    CompanySurvey2024.objects.all().delete()

    # Create new SurveyAccess entries with a fresh CompanySurvey2024 for each Anbieter
    for obj in Anbieter.objects.all():
        code = anbieter.field_helper.generate_unique_code()
        survey = CompanySurvey2024.objects.create(
            anbieter=obj, revision=1, name=obj.name
        )
        SurveyAccess.objects.create(
            anbieter=obj,
            survey=survey,
            code=code,
        )
        logger.info(f"{obj.name} http://localhost/survey/{code}")


class Migration(migrations.Migration):
    dependencies = [
        ("anbieter", "0015_add_survey_access"),
    ]

    operations = [
        migrations.RunPython(create_test_anbieter),
        migrations.RunPython(reset_survey_access_entries),
    ]
