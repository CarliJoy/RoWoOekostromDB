# Generated by Django 5.1.2 on 2024-10-26 11:52

import django.db.models.deletion
from django.db import migrations, models

import anbieter.field_helper
import anbieter.fields


def reset_survey_access_entries(apps, schema_editor):  # noqa: ARG001
    CompanySurvey2024 = apps.get_model("anbieter", "CompanySurvey2024")
    # Delete all existing CompanySurvey2024 entries
    CompanySurvey2024.objects.all().delete()


class Migration(migrations.Migration):
    dependencies = [
        ("anbieter", "0014_companysurvey2024"),
    ]

    operations = [
        migrations.AddField(
            model_name="companysurvey2024",
            name="anbieter",
            field=models.ForeignKey(
                default=1,
                editable=False,
                on_delete=django.db.models.deletion.CASCADE,
                to="anbieter.anbieter",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="companysurvey2024",
            name="city",
            field=anbieter.fields.CharField(
                blank=True, max_length=256, verbose_name="Ort"
            ),
        ),
        migrations.AddField(
            model_name="companysurvey2024",
            name="contact_mail",
            field=anbieter.fields.CharField(
                blank=True, max_length=256, verbose_name="E-Mail"
            ),
        ),
        migrations.AddField(
            model_name="companysurvey2024",
            name="contact_name",
            field=anbieter.fields.CharField(
                blank=True, max_length=256, verbose_name="Name"
            ),
        ),
        migrations.AddField(
            model_name="companysurvey2024",
            name="contact_phone",
            field=anbieter.fields.CharField(
                blank=True, max_length=256, verbose_name="Telefon"
            ),
        ),
        migrations.AddField(
            model_name="companysurvey2024",
            name="contact_position",
            field=anbieter.fields.CharField(
                blank=True, max_length=256, verbose_name="Position/Funktion"
            ),
        ),
        migrations.AddField(
            model_name="companysurvey2024",
            name="fax",
            field=anbieter.fields.CharField(
                blank=True, max_length=256, verbose_name="Fax"
            ),
        ),
        migrations.AddField(
            model_name="companysurvey2024",
            name="homepage",
            field=anbieter.fields.CharField(
                blank=True, max_length=1024, verbose_name="Homepage"
            ),
        ),
        migrations.AddField(
            model_name="companysurvey2024",
            name="mail",
            field=anbieter.fields.CharField(
                blank=True, max_length=256, verbose_name="E-Mail"
            ),
        ),
        migrations.AddField(
            model_name="companysurvey2024",
            name="phone",
            field=anbieter.fields.CharField(
                blank=True, max_length=256, verbose_name="Telefon"
            ),
        ),
        migrations.AddField(
            model_name="companysurvey2024",
            name="plz",
            field=anbieter.fields.CharField(
                blank=True, max_length=256, verbose_name="PLZ"
            ),
        ),
        migrations.AddField(
            model_name="companysurvey2024",
            name="revision",
            field=models.PositiveIntegerField(default=1, editable=False),
        ),
        migrations.AddField(
            model_name="companysurvey2024",
            name="street",
            field=anbieter.fields.CharField(
                blank=True, max_length=256, verbose_name="Straße"
            ),
        ),
        migrations.AlterField(
            model_name="companysurvey2024",
            name="name",
            field=anbieter.fields.CharField(
                blank=True, max_length=256, verbose_name="Vollständiger Firmenname"
            ),
        ),
        migrations.AlterField(
            model_name="companysurvey2024",
            name="plant_ee_saved_trade",
            field=anbieter.fields.PercentField(
                blank=True,
                decimal_places=1,
                help_text=(
                    "Anlagen außerhalb der Förderung die Sie nicht besitzen aber"
                    " mit denen sie einen direkten Liefervertrag abgeschlossen haben"
                ),
                max_digits=6,
                null=True,
                validators=[anbieter.fields.is_percentage],
                verbose_name="direkt Verträge",
            ),
        ),
        migrations.AlterField(
            model_name="companysurvey2024",
            name="register_id",
            field=anbieter.fields.CharField(
                blank=True,
                help_text="Handelsregisternummer falls zutreffend",
                max_length=256,
                verbose_name="Handelsregisternummer",
            ),
        ),
        migrations.RunPython(reset_survey_access_entries),
        migrations.AlterUniqueTogether(
            name="companysurvey2024",
            unique_together={("anbieter", "revision")},
        ),
        migrations.CreateModel(
            name="SurveyAccess",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        default=anbieter.field_helper.generate_unique_code,
                        max_length=32,
                        unique=True,
                    ),
                ),
                ("current_revision", models.IntegerField(db_index=True, default=1)),
                ("access_count", models.IntegerField(default=0)),
                ("last_access", models.DateTimeField(blank=True, null=True)),
                (
                    "anbieter",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="anbieter.anbieter",
                    ),
                ),
                (
                    "survey",
                    models.ForeignKey(
                        help_text="Survey of the current revision",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="anbieter.companysurvey2024",
                    ),
                ),
            ],
        ),
    ]
